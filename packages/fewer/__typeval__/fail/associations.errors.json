[
    {
        "location": {
            "start": {
                "line": 32,
                "column": 23
            },
            "end": {
                "line": 32,
                "column": 30
            }
        },
        "errorMessage": "Argument of type '\"posts\"' is not assignable to parameter of type '\"posts\" & \"This key is already in use.\"'.\n  Type '\"posts\"' is not assignable to type '\"This key is already in use.\"'."
    },
    {
        "location": {
            "start": {
                "line": 33,
                "column": 22
            },
            "end": {
                "line": 33,
                "column": 29
            }
        },
        "errorMessage": "Argument of type '\"users\"' is not assignable to parameter of type '\"users\" & \"This key is already in use.\"'.\n  Type '\"users\"' is not assignable to type '\"This key is already in use.\"'."
    },
    {
        "location": {
            "start": {
                "line": 34,
                "column": 21
            },
            "end": {
                "line": 34,
                "column": 28
            }
        },
        "errorMessage": "Argument of type '\"posts\"' is not assignable to parameter of type '\"posts\" & \"This key is already in use.\"'.\n  Type '\"posts\"' is not assignable to type '\"This key is already in use.\"'."
    },
    {
        "location": {
            "start": {
                "line": 35,
                "column": 20
            },
            "end": {
                "line": 35,
                "column": 27
            }
        },
        "errorMessage": "Argument of type '\"users\"' is not assignable to parameter of type '\"users\" & \"This key is already in use.\"'.\n  Type '\"users\"' is not assignable to type '\"This key is already in use.\"'."
    },
    {
        "location": {
            "start": {
                "line": 37,
                "column": 21
            },
            "end": {
                "line": 37,
                "column": 40
            }
        },
        "errorMessage": "Argument of type 'Association<AssociationType.HAS_MANY, Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<...>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociati...' is not assignable to parameter of type 'Association<AssociationType, Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{} & { firstName: string; lastName: string; }> & ResolveAssociations<...>>, ... 6 more ..., {}>'.\n  Type 'true' is not assignable to type 'false'."
    },
    {
        "location": {
            "start": {
                "line": 39,
                "column": 21
            },
            "end": {
                "line": 39,
                "column": 30
            }
        },
        "errorMessage": "Argument of type 'Association<AssociationType.HAS_MANY, Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<...>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociati...' is not assignable to parameter of type 'Association<AssociationType, Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { ...; }> & ResolveAssociations<...>>, ... 6 more ..., {}>'.\n  Type 'Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<boolean>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociations<...>>' is not assignable to type 'Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }> & ResolveAssociations<...>>'.\n    Type 'Merge<{} & { firstName: string; lastName: string; }>' is missing the following properties from type 'Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>': userId, title"
    },
    {
        "location": {
            "start": {
                "line": 40,
                "column": 21
            },
            "end": {
                "line": 40,
                "column": 30
            }
        },
        "errorMessage": "Argument of type 'Association<AssociationType.HAS_MANY, Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<...>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociati...' is not assignable to parameter of type 'Association<AssociationType, Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { ...; }> & ResolveAssociations<...>>, ... 6 more ..., {}>'.\n  Type 'Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<boolean>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociations<...>>' is not assignable to type 'Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }> & ResolveAssociations<...>>'."
    },
    {
        "location": {
            "start": {
                "line": 41,
                "column": 25
            },
            "end": {
                "line": 41,
                "column": 34
            }
        },
        "errorMessage": "Argument of type 'Association<AssociationType.HAS_MANY, Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<...>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociati...' is not assignable to parameter of type 'Association<AssociationType, Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { ...; }> & ResolveAssociations<...>>, ... 6 more ..., {}>'."
    },
    {
        "location": {
            "start": {
                "line": 42,
                "column": 25
            },
            "end": {
                "line": 42,
                "column": 34
            }
        },
        "errorMessage": "Argument of type 'Association<AssociationType.HAS_MANY, Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<...>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociati...' is not assignable to parameter of type 'Association<AssociationType, Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { ...; }> & ResolveAssociations<...>>, ... 6 more ..., {}>'."
    },
    {
        "location": {
            "start": {
                "line": 43,
                "column": 25
            },
            "end": {
                "line": 43,
                "column": 44
            }
        },
        "errorMessage": "Argument of type 'Association<AssociationType.HAS_MANY, Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<...>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociati...' is not assignable to parameter of type 'Association<AssociationType, Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { ...; }> & ResolveAssociations<...>>, ... 6 more ..., {}>'.\n  Type 'Repository<Merge<{} & { firstName: string; lastName: string; }>, {}, { eq: <T>(left: ExprTypeWithLiterals<ExprType<T>>, right: ExprTypeWithLiterals<ExprType<T>>) => ExprType<boolean>; lower: <T>(input: ExprType<...>) => ExprType<...>; }, ... 5 more ..., Merge<...> & ResolveAssociations<...>>' is not assignable to type 'Repository<Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }>, {}, {}, {}, INTERNAL_TYPES.ALL_FIELDS, {}, {}, any, Merge<{ subtitle?: string | undefined; } & { userId: number; title: string; }> & ResolveAssociations<...>>'."
    },
    {
        "location": {
            "start": {
                "line": 49,
                "column": 5
            },
            "end": {
                "line": 51,
                "column": 6
            }
        },
        "errorMessage": "Argument of type '{ posts: { title: string; }; }' is not assignable to parameter of type 'Merge<WhereForType<Merge<{} & { firstName: string; lastName: string; }>> & {}>'.\n  Object literal may only specify known properties, and 'posts' does not exist in type 'Merge<WhereForType<Merge<{} & { firstName: string; lastName: string; }>> & {}>'."
    }
]